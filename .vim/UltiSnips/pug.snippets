#--general -----------------------
snippet =' "desc" i
='$0'
endsnippet

#--tags -----------------------
snippet html "desc" b
html(lang='$0')
endsnippet

snippet meta "desc" b
meta($0)
endsnippet

snippet link "desc" b
link(rel='$1' href='$0')
endsnippet

#--meta http-equiv= -----------------------
snippet refresh "des" i
refresh' content='${1:5}${2:; url=http://${3:www.example.com/}}
endsnippet

snippet X-UA-Compatible "des" i
X-UA-Compatible' content='IE=edge,chrome=1
endsnippet

#--meta name= -----------------------
snippet application-name "des" i
application-name' content='${0}
endsnippet

snippet author "des" i
author' content='${0}
endsnippet

snippet description "des" i
description' content='${0}
endsnippet

snippet generator "des" i
generator' content='${0}
endsnippet

snippet keywords "des" i
keywords' content='${0}
endsnippet

snippet viewport "des" i
viewport' content='width=device-width, initial-scale=1.0
endsnippet

snippet apple-mobile-webapp-capable" "des" i
apple-mobile-webapp-capable" content="yes
endsnippet

#--form elemets -----------------------
snippet form "desc" b
form(action='$1' method='$0')
endsnippet

snippet label "desc" b
label
	| ${1:Label}
	input(type='$0')
endsnippet

snippet input "desc" b
input(type='$0')
endsnippet

snippet input(type='text "desc" b
label(for='${1}') ${2:$1}
input(type='text' id='$1' name='$1' placeholder='${3:$1}
endsnippet

snippet input(type='password "desc" b
label(for='${1}') ${2:$1}
input(type='password' id='$1' name='$1' placeholder='${3:$1}
endsnippet

snippet input(type='email "desc" b
label(for='${1}') ${2:$1}
input(type='email' id='$1' name='$1' placeholder='${3:$1}
endsnippet

snippet input(type='search "desc" b
label(for='${1}') ${2:$1}
input(type='search' id='$1' name='$1' placeholder='${3:$1}
endsnippet

pre_expand "b = re.match('^(\s*.*\')', snip.buffer[snip.line]); a = b.group(1); snip.buffer[snip.line] = a; snip.cursor.set(snip.line, len(a))"
snippet input(type='checkbox "desc" b
 id='$1' name='$1')
label(for='${1}') ${0:$1}
endsnippet

pre_expand "b = re.match('^(\s*.*\')', snip.buffer[snip.line]); a = b.group(1); snip.buffer[snip.line] = a; snip.cursor.set(snip.line, len(a))"
snippet input(type='radio "des" b
 id='$1' name='${0:Group}')
label(for='${1}') ${2:$1}
endsnippet

snippet input(type='file "des" b
label(for='${1}') ${0:$1}
input(type='file' id='$1' name='$1
endsnippet

snippet input(type='hidden "des" b
input(type='hidden' value='$1' name='$0
endsnippet

snippet input(type='button "des" b
input(type='button' value='$0
endsnippet

snippet input(type='submit "des" b
input(type='submit' value='$0
endsnippet

snippet button "desc" b
button(type='$0')
endsnippet

snippet button(type='submit "des" b
button(type='submit' value='$0
endsnippet

snippet button(type='reset "des" b
button(type='reset' value='$0
endsnippet

snippet button(type='button "des" b
button(type='button' value='$0
endsnippet

snippet input(type='image "des" b
input(type='image' src='$1' alt='$0
endsnippet

snippet select "des" b
label(for='${1}') ${0:$1}
select(id='$1' name='$1')
endsnippet

snippet optgroup "des" b
optgroup(label='$1')
endsnippet

snippet option "des" b
option(value='$1') ${0:$1}
endsnippet

snippet textarea "des" b
label(for='${1}') ${2:$1}
textarea(id='$1' name='$1' cols='${3:30}' rows='${0:10}')
endsnippet
#--------------------------------------
snippet bower "desc"
//- bower:$0
//- endbower
endsnippet

snippet inject "desc"
//- inject:$0
//- endinject
endsnippet

snippet "for " "desc" br
for ${1:val, index} in ${0:obj,arr}
endsnippet

snippet "each " "desc" brA
each ${1:val, index} in ${0:obj,arr}
endsnippet

snippet hug_bootstrap "headsupgrid for twitter bootstrap"
$(document).ready(function() {
  pageUnits = 'px';
  colUnits = 'px';
  pagewidth = 1140;
  columns = 12;
  columnwidth = 67.5;
  gutterwidth = 30;
  pagetopmargin = 0;
  rowheight = ${1:0};
  gridonload = 'on';
  makehugrid();
  setgridonload();
});
$(window).resize(function() {
  rowheight = $1;
  makehugrid();
});
endsnippet

snippet hug_960_12 "headsupgrid for 960gs 12 column"
$(document).ready(function() {
  pageUnits = 'px';
  colUnits = 'px';
  pagewidth = 940;
  columns = 12;
  columnwidth = 60;
  gutterwidth = 20;
  pagetopmargin = 0;
  rowheight = ${1:0};
  gridonload = 'on';
  makehugrid();
  setgridonload();
});
$(window).resize(function() {
  rowheight = $1;
  makehugrid();
});
endsnippet

snippet hug_960_16 "headsupgrid for 960gs 16 column"
$(document).ready(function() {
  pageUnits = 'px';
  colUnits = 'px';
  pagewidth = 940;
  columns = 16;
  columnwidth = 40;
  gutterwidth = 20;
  pagetopmargin = 0;
  rowheight = ${1:0};
  gridonload = 'on';
  makehugrid();
  setgridonload();
});
$(window).resize(function() {
  rowheight = $1;
  makehugrid();
});
endsnippet

snippet hug_960_24 "headsupgrid for 960gs 24 column"
$(document).ready(function() {
  pageUnits = 'px';
  colUnits = 'px';
  pagewidth = 950;
  columns = 24;
  columnwidth = 30;
  gutterwidth = 10;
  pagetopmargin = 0;
  rowheight = ${1:0};
  gridonload = 'on';
  makehugrid();
  setgridonload();
});
$(window).resize(function() {
  rowheight = $1;
  makehugrid();
});
endsnippet

snippet hug_resp "headsupgrid responsive"
definegrid = function() {
  var browserWidth = $(window).width();
  if (browserWidth >= 1001)
  {
     pageUnits = 'px';
     colUnits = 'px';
     pagewidth = 960;
     columns = 6;
     columnwidth = 140;
     gutterwidth = 24;
     pagetopmargin = 35;
     rowheight = 20;
     gridonload = 'off';
     makehugrid();
  }
  if (browserWidth <= 1000)
  {
     pageUnits = '%';
     colUnits = '%';
     pagewidth = 94;
     columns = 2;
     columnwidth = 48;
     gutterwidth = 4;
     pagetopmargin = 35;
     rowheight = 20;
     gridonload = 'off';
     makehugrid();
  }
  if (browserWidth <= 768)
  {
     pageUnits = '%';
     colUnits = '%';
     pagewidth = 96;
     columns = 2;
     columnwidth = 49;
     gutterwidth = 2;
     pagetopmargin = 35;
     rowheight = 20;
     gridonload = 'off';
     makehugrid();
  }
}
$(document).ready(function() {
  definegrid();
  setgridonload();
});
$(window).resize(function() {
  definegrid();
  setgridonresize();
});
endsnippet

snippet holderjs "holderjs"
Holder.addTheme("${1:MyTheme}", {
  bg: "${2:#bdc3c7}",
  fg: "${3:#ffffff}",
  size: ${4:10},
  font: "${5:Monaco}",
  fontweight: "${0:bold}"
});
endsnippet

snippet placeholder "image placeholder" i
holder.js/${1:100}x${2:100}${3:?theme=${4:MyTheme}${5:&text=${6:IMAGE}}}
endsnippet
